package net.giro.clientes.logica;

import java.util.HashMap;
import java.util.List;

import javax.ejb.Remote;

import net.giro.clientes.beans.ContactoPersonaExt;
import net.giro.clientes.beans.DirectorioTelefonicoExt;
import net.giro.clientes.beans.DomicilioExt;
import net.giro.clientes.beans.DirectorioTelefonico;
import net.giro.clientes.beans.Domicilio;
import net.giro.clientes.beans.Identificacion;
import net.giro.clientes.beans.IdentificacionExt;
import net.giro.clientes.beans.Negocio;
import net.giro.clientes.beans.NegocioExt;
import net.giro.clientes.beans.Persona;
import net.giro.clientes.beans.PersonaEstudio;
import net.giro.clientes.beans.PersonaEstudioExt;
import net.giro.clientes.beans.PersonaExt;
import net.giro.clientes.beans.PersonaNegocio;
import net.giro.clientes.beans.PersonaNegocioExt;
import net.giro.clientes.beans.PersonaNombresAlterno;
import net.giro.clientes.beans.PersonaNombresAlternoExt;
import net.giro.plataforma.InfoSesion;
import net.giro.plataforma.beans.ConValores;
import net.giro.plataforma.ubicacion.beans.Colonia;
import net.giro.plataforma.ubicacion.beans.Estado;
import net.giro.plataforma.ubicacion.beans.Localidad;
import net.giro.plataforma.ubicacion.beans.Municipio;
import net.giro.respuesta.Respuesta;

@Remote
public interface ClientesRem {
	public void setInfoSecion(InfoSesion infoSesion);
	
	public long salvar(Persona persona) throws Exception;
	public Respuesta salvar(PersonaExt personaExt) throws Exception;
	public long salvar(Domicilio domicilio) throws Exception;
	public Respuesta salvar(DomicilioExt domicilioExt) throws Exception;
	public long salvar(DirectorioTelefonico directorio) throws Exception;
	public Respuesta salvar(DirectorioTelefonicoExt directorioExt) throws Exception;
	public Respuesta salvar(PersonaNombresAlternoExt nombreAlternoExt) throws Exception ;
	public long salvar(PersonaEstudio estudio) throws Exception;
	public long salvar(PersonaEstudioExt estudioExt) throws Exception;
	public long salvar(Identificacion identificacion) throws Exception;
	public Respuesta salvar(IdentificacionExt identificacionExt);
	
	public Respuesta eliminar(PersonaNombresAlternoExt nombreAlternoExt) throws Exception;
	public void eliminar(Persona persona) throws Exception;
	public void eliminar(PersonaExt personaExt) throws Exception;
	public void eliminar(PersonaEstudio estudio)  throws Exception;
	public void eliminar(PersonaEstudioExt personaEstudioExt) throws Exception;
	public void eliminar(Identificacion identificacion) throws Exception;
	public Respuesta eliminar(IdentificacionExt identificacionExt) throws Exception;

	public List<ConValores> buscarPantallas();
	public List<ConValores> buscarEstadosCiviles();
	public List<ConValores> buscarNacionalidades();
	public List<ConValores> buscarTiposDeSangre();
	public List<Estado> buscarEstados();
	public List<ConValores> tipoDocumentos();
	public List<ConValores> documentos();
	public List<ConValores> nivelEstudios();
	public List<ConValores> tiposIdentificaciones();
	public List<Persona> buscarPersona(String tipoBusqueda, String valorBusqueda) throws Exception;
	public List<PersonaExt> buscarPersonaExt(String tipoBusqueda, String valorBusqueda, Long tipoPersonaBusqueda) throws Exception;
	public PersonaExt buscarPersonaExt(long idPersona) throws Exception;
	public Persona buscarPersona(long idPersona) throws Exception;
	public List<Persona> buscarConyugePersona(String tipoBusquedaConyuge,String valorBusquedaConyuge) throws Exception;
	public List<PersonaExt> buscarConyugePersonaExt(String tipoBusquedaConyuge,String valorBusquedaConyuge) throws Exception;
	public List<Municipio> buscarMunicipio(Estado estado,String busquedaMunicipio) throws Exception;
	public Municipio buscarMunicipio(Long id) throws Exception;
	public List<Localidad> buscarLocalidad(Municipio municipio,String busquedaLocalidad) throws Exception;
	public List<Colonia> buscarColonia(Localidad localidad,String busquedaColonia) throws Exception;
	public List<Domicilio> buscarDomicilio(Persona persona) throws Exception;
	public List<Domicilio> buscarDomicilio(PersonaExt personaExt) throws Exception;
	public Domicilio buscarDomicilio(Long id) throws Exception;
	public DomicilioExt buscarDomicilioExt(Long id) throws Exception;
	public List<DomicilioExt> buscarDomicilioExt(Persona persona) throws Exception;
	public List<DomicilioExt> buscarDomicilioExt(PersonaExt personaExt) throws Exception;
	public List<DirectorioTelefonico> buscarDirectorio(Persona persona) throws Exception;
	public List<DirectorioTelefonicoExt> buscarDirectorioExt(Persona persona) throws Exception;
	public Respuesta buscarDirectorioExt(PersonaExt personaExt) throws Exception;
	public List<PersonaNombresAlterno> buscarNombreAlterno(Persona persona) throws Exception;
	public Respuesta buscarNombreAlterno(PersonaExt personaExt) throws Exception;
	public List<PersonaEstudio> buscarEstudios(Persona persona) throws Exception;
	public List<PersonaEstudioExt> buscarEstudiosExt(Persona persona) throws Exception;
	public List<PersonaEstudioExt> buscarEstudiosExt(PersonaExt personaExt) throws Exception;
	public List<Identificacion> buscarIdentificaciones(Persona persona) throws Exception;
	public List<Identificacion> buscarIdentificaciones(PersonaExt personaExt) throws Exception;
	public List<IdentificacionExt> buscarIdentificacionesExt(PersonaExt personaExt) throws Exception;
	public List<ConValores> buscarDomicilios(HashMap<String, String> params) throws Exception;
	public List<ConValores> buscartTiposTelefono() throws Exception;
	public List<ConValores> buscarCompaniasTel() throws Exception;
	public List<ConValores> buscarCarreras() throws Exception;
	public Colonia buscarColonia(Long colonia) throws Exception;
	public Localidad buscarLocalidad(Long localidad) throws Exception;
	public Respuesta buscarPersonaNegocio(PersonaExt personaExt) throws Exception;
	public List<Negocio> buscarNegocios(String tipoBusquedaNegocio,String valorBusquedaNegocio) throws Exception;
	public List<NegocioExt> buscarNegociosExt(String tipoBusquedaNegocio,String valorBusquedaNegocio) throws Exception;
	public Respuesta salvar(PersonaNegocioExt personaNagocioExt) throws Exception;
	public Negocio buscarNegocios(long id) throws Exception;
	public NegocioExt buscarNegociosExt(long id) throws Exception;
	public Respuesta eliminar(PersonaNegocioExt personaNegocioExt) throws Exception;
	public List<DomicilioExt> buscarDomicilioExt(Negocio negocio) throws Exception;
	public List<DirectorioTelefonicoExt> buscarDirectorioExt(Negocio negocio) throws Exception;
	public List<PersonaNegocio> buscarPersonaNegocio(Negocio negocio) throws Exception;
	public List<Negocio> buscarNegocios(String tipoBusquedaNegocio,String valorBusquedaNegocio, PersonaExt persona) throws Exception;
	public List<NegocioExt> buscarNegociosExt(String tipoBusquedaNegocio,String valorBusquedaNegocio, PersonaExt personaExt)throws Exception;
	public PersonaExt asignarPersona(NegocioExt negocio) throws Exception;
	public List<PersonaExt> buscarPersonaGeneral(String tipoBusqueda, String valorBusqueda) throws Exception;
	public List<PersonaExt> buscarPersonaPorNegocio(String tipoBusquedaPersona, String valorBusquedaPersona, NegocioExt negocio) throws Exception;
	public Respuesta buscarPersonasContacto(PersonaExt personaExt) throws Exception;
	public Respuesta buscarNegociosContacto(PersonaExt personaExt) throws Exception;
	public Respuesta salvar(ContactoPersonaExt personaContacto) throws Exception;
	public Respuesta eliminar(ContactoPersonaExt personaContacto) throws Exception;
	public Respuesta listarBancos();
}
