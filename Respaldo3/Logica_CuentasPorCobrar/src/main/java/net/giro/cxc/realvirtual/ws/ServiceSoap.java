
package net.giro.cxc.realvirtual.ws;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ServiceSoap", targetNamespace = "http://tempuri.org/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ServiceSoap {


    /**
     * Obtiene el timbre, regresa el timbre y el cfdi
     * 
     * @param base64Cfd
     * @return
     *     returns org.tempuri.StructCfd
     */
    @WebMethod(operationName = "GetTicket", action = "http://tempuri.org/GetTicket")
    @WebResult(name = "GetTicketResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "GetTicket", targetNamespace = "http://tempuri.org/", className = "org.tempuri.GetTicket")
    @ResponseWrapper(localName = "GetTicketResponse", targetNamespace = "http://tempuri.org/", className = "org.tempuri.GetTicketResponse")
    public StructCfd getTicket(
        @WebParam(name = "base64Cfd", targetNamespace = "http://tempuri.org/")
        String base64Cfd);

    /**
     * Obtiene el timbre, regresa el timbre y el cfdi sin usar cabeceras
     * 
     * @param strUserName
     * @param strPassword
     * @param base64Cfd
     * @return
     *     returns org.tempuri.StructCfd
     */
    @WebMethod(operationName = "GetTicketSC", action = "http://tempuri.org/GetTicketSC")
    @WebResult(name = "GetTicketSCResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "GetTicketSC", targetNamespace = "http://tempuri.org/", className = "org.tempuri.GetTicketSC")
    @ResponseWrapper(localName = "GetTicketSCResponse", targetNamespace = "http://tempuri.org/", className = "org.tempuri.GetTicketSCResponse")
    public StructCfd getTicketSC(
        @WebParam(name = "strUserName", targetNamespace = "http://tempuri.org/")
        String strUserName,
        @WebParam(name = "strPassword", targetNamespace = "http://tempuri.org/")
        String strPassword,
        @WebParam(name = "base64Cfd", targetNamespace = "http://tempuri.org/")
        String base64Cfd);

    /**
     * Obtiene el timbre, regresa el timbre y el cfdi, validando solo serie y folio
     * 
     * @param base64Cfd
     * @return
     *     returns org.tempuri.StructCfd
     */
    @WebMethod(operationName = "GetTicketCSF", action = "http://tempuri.org/GetTicketCSF")
    @WebResult(name = "GetTicketCSFResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "GetTicketCSF", targetNamespace = "http://tempuri.org/", className = "org.tempuri.GetTicketCSF")
    @ResponseWrapper(localName = "GetTicketCSFResponse", targetNamespace = "http://tempuri.org/", className = "org.tempuri.GetTicketCSFResponse")
    public StructCfd getTicketCSF(
        @WebParam(name = "base64Cfd", targetNamespace = "http://tempuri.org/")
        String base64Cfd);

    /**
     * Obtiene el timbre, agrega un usuario si no existe
     * 
     * @param cuentaAdministrador
     * @param rfcAdministrador
     * @param claveAdministrador
     * @param base64Cfd
     * @return
     *     returns org.tempuri.StructCfd
     */
    @WebMethod(operationName = "GetTicketAU", action = "http://tempuri.org/GetTicketAU")
    @WebResult(name = "GetTicketAUResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "GetTicketAU", targetNamespace = "http://tempuri.org/", className = "org.tempuri.GetTicketAU")
    @ResponseWrapper(localName = "GetTicketAUResponse", targetNamespace = "http://tempuri.org/", className = "org.tempuri.GetTicketAUResponse")
    public StructCfd getTicketAU(
        @WebParam(name = "base64Cfd", targetNamespace = "http://tempuri.org/")
        String base64Cfd,
        @WebParam(name = "rfcAdministrador", targetNamespace = "http://tempuri.org/")
        String rfcAdministrador,
        @WebParam(name = "cuentaAdministrador", targetNamespace = "http://tempuri.org/")
        String cuentaAdministrador,
        @WebParam(name = "claveAdministrador", targetNamespace = "http://tempuri.org/")
        String claveAdministrador);

    /**
     * Cancela el timbre
     * 
     * @param base64Cfd
     * @return
     *     returns org.tempuri.StructCancel
     */
    @WebMethod(operationName = "CancelTicket", action = "http://tempuri.org/CancelTicket")
    @WebResult(name = "CancelTicketResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "CancelTicket", targetNamespace = "http://tempuri.org/", className = "org.tempuri.CancelTicket")
    @ResponseWrapper(localName = "CancelTicketResponse", targetNamespace = "http://tempuri.org/", className = "org.tempuri.CancelTicketResponse")
    public StructCancel cancelTicket(
        @WebParam(name = "base64Cfd", targetNamespace = "http://tempuri.org/")
        String base64Cfd);

    /**
     * Cancela el timbre
     * 
     * @param cfdib64
     * @param llaveEmisorB64
     * @param cerEmisorB64
     * @param emailReceptor
     * @return
     *     returns org.tempuri.StructCancel
     */
    @WebMethod(operationName = "CancelTicket2", action = "http://tempuri.org/CancelTicket2")
    @WebResult(name = "CancelTicket2Result", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "CancelTicket2", targetNamespace = "http://tempuri.org/", className = "org.tempuri.CancelTicket2")
    @ResponseWrapper(localName = "CancelTicket2Response", targetNamespace = "http://tempuri.org/", className = "org.tempuri.CancelTicket2Response")
    public StructCancel cancelTicket2(
        @WebParam(name = "CFDIB64", targetNamespace = "http://tempuri.org/")
        String cfdib64,
        @WebParam(name = "CerEmisorB64", targetNamespace = "http://tempuri.org/")
        String cerEmisorB64,
        @WebParam(name = "LlaveEmisorB64", targetNamespace = "http://tempuri.org/")
        String llaveEmisorB64,
        @WebParam(name = "EmailReceptor", targetNamespace = "http://tempuri.org/")
        String emailReceptor);

    /**
     * Cancela el timbre sin usar cabecera
     * 
     * @param strUserName
     * @param strPassword
     * @param base64Cfd
     * @return
     *     returns org.tempuri.StructCancel
     */
    @WebMethod(operationName = "CancelTicketSC", action = "http://tempuri.org/CancelTicketSC")
    @WebResult(name = "CancelTicketSCResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "CancelTicketSC", targetNamespace = "http://tempuri.org/", className = "org.tempuri.CancelTicketSC")
    @ResponseWrapper(localName = "CancelTicketSCResponse", targetNamespace = "http://tempuri.org/", className = "org.tempuri.CancelTicketSCResponse")
    public StructCancel cancelTicketSC(
        @WebParam(name = "strUserName", targetNamespace = "http://tempuri.org/")
        String strUserName,
        @WebParam(name = "strPassword", targetNamespace = "http://tempuri.org/")
        String strPassword,
        @WebParam(name = "base64Cfd", targetNamespace = "http://tempuri.org/")
        String base64Cfd);

    /**
     * Cancela el timbre de otros PAC
     * 
     * @param totalfactura
     * @param rfcreceptor
     * @param base64Cfd
     * @return
     *     returns org.tempuri.StructCancel
     */
    @WebMethod(operationName = "CancelTicketExt", action = "http://tempuri.org/CancelTicketExt")
    @WebResult(name = "CancelTicketExtResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "CancelTicketExt", targetNamespace = "http://tempuri.org/", className = "org.tempuri.CancelTicketExt")
    @ResponseWrapper(localName = "CancelTicketExtResponse", targetNamespace = "http://tempuri.org/", className = "org.tempuri.CancelTicketExtResponse")
    public StructCancel cancelTicketExt(
        @WebParam(name = "base64Cfd", targetNamespace = "http://tempuri.org/")
        String base64Cfd,
        @WebParam(name = "totalfactura", targetNamespace = "http://tempuri.org/")
        String totalfactura,
        @WebParam(name = "rfcreceptor", targetNamespace = "http://tempuri.org/")
        String rfcreceptor);

    /**
     * Cancela el timbre
     * 
     * @param canB64
     * @return
     *     returns org.tempuri.StructCancel
     */
    @WebMethod(operationName = "CancelTest", action = "http://tempuri.org/CancelTest")
    @WebResult(name = "CancelTestResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "CancelTest", targetNamespace = "http://tempuri.org/", className = "org.tempuri.CancelTest")
    @ResponseWrapper(localName = "CancelTestResponse", targetNamespace = "http://tempuri.org/", className = "org.tempuri.CancelTestResponse")
    public StructCancel cancelTest(
        @WebParam(name = "CanB64", targetNamespace = "http://tempuri.org/")
        String canB64);

    /**
     * Cancela el timbre
     * 
     * @param cfdib64
     * @param llaveEmisorB64
     * @param cerEmisorB64
     * @param emailReceptor
     * @return
     *     returns org.tempuri.StructCancel
     */
    @WebMethod(operationName = "CancelTest2", action = "http://tempuri.org/CancelTest2")
    @WebResult(name = "CancelTest2Result", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "CancelTest2", targetNamespace = "http://tempuri.org/", className = "org.tempuri.CancelTest2")
    @ResponseWrapper(localName = "CancelTest2Response", targetNamespace = "http://tempuri.org/", className = "org.tempuri.CancelTest2Response")
    public StructCancel cancelTest2(
        @WebParam(name = "CFDIB64", targetNamespace = "http://tempuri.org/")
        String cfdib64,
        @WebParam(name = "CerEmisorB64", targetNamespace = "http://tempuri.org/")
        String cerEmisorB64,
        @WebParam(name = "LlaveEmisorB64", targetNamespace = "http://tempuri.org/")
        String llaveEmisorB64,
        @WebParam(name = "EmailReceptor", targetNamespace = "http://tempuri.org/")
        String emailReceptor);

    /**
     * Obtiene un CFDI
     * 
     * @param evcRfcEmisor
     * @param evcRfcReceptor
     * @param evcFechaExpedicion
     * @param evcTotal
     * @param evcTipoComprobante
     * @return
     *     returns org.tempuri.ClienteUsuarioTimbre
     */
    @WebMethod(operationName = "PpoCfdTimbre_Cn", action = "http://tempuri.org/PpoCfdTimbre_Cn")
    @WebResult(name = "PpoCfdTimbre_CnResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "PpoCfdTimbre_Cn", targetNamespace = "http://tempuri.org/", className = "org.tempuri.PpoCfdTimbreCn")
    @ResponseWrapper(localName = "PpoCfdTimbre_CnResponse", targetNamespace = "http://tempuri.org/", className = "org.tempuri.PpoCfdTimbreCnResponse")
    public ClienteUsuarioTimbre ppoCfdTimbreCn(
        @WebParam(name = "evcTipoComprobante", targetNamespace = "http://tempuri.org/")
        String evcTipoComprobante,
        @WebParam(name = "evcRfcEmisor", targetNamespace = "http://tempuri.org/")
        String evcRfcEmisor,
        @WebParam(name = "evcRfcReceptor", targetNamespace = "http://tempuri.org/")
        String evcRfcReceptor,
        @WebParam(name = "evcFechaExpedicion", targetNamespace = "http://tempuri.org/")
        String evcFechaExpedicion,
        @WebParam(name = "evcTotal", targetNamespace = "http://tempuri.org/")
        String evcTotal);

    /**
     * Obtiene un CFDI
     * 
     * @param index
     * @return
     *     returns org.tempuri.StructAcuse
     */
    @WebMethod(operationName = "GetAcuse", action = "http://tempuri.org/GetAcuse")
    @WebResult(name = "GetAcuseResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "GetAcuse", targetNamespace = "http://tempuri.org/", className = "org.tempuri.GetAcuse")
    @ResponseWrapper(localName = "GetAcuseResponse", targetNamespace = "http://tempuri.org/", className = "org.tempuri.GetAcuseResponse")
    public StructAcuse getAcuse(
        @WebParam(name = "index", targetNamespace = "http://tempuri.org/")
        long index);

    /**
     * Verifica la estructura del cfd y entrega la decodificación
     * 
     * @param base64Cfd
     * @return
     *     returns org.tempuri.StructCfd
     */
    @WebMethod(operationName = "TestCfd", action = "http://tempuri.org/TestCfd")
    @WebResult(name = "TestCfdResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "TestCfd", targetNamespace = "http://tempuri.org/", className = "org.tempuri.TestCfd")
    @ResponseWrapper(localName = "TestCfdResponse", targetNamespace = "http://tempuri.org/", className = "org.tempuri.TestCfdResponse")
    public StructCfd testCfd(
        @WebParam(name = "base64Cfd", targetNamespace = "http://tempuri.org/")
        String base64Cfd);

    /**
     * Verifica la estructura del cfd contra el schema
     * 
     * @param base64Cfd
     * @return
     *     returns org.tempuri.StructCfd
     */
    @WebMethod(operationName = "SchemaCfd", action = "http://tempuri.org/SchemaCfd")
    @WebResult(name = "SchemaCfdResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "SchemaCfd", targetNamespace = "http://tempuri.org/", className = "org.tempuri.SchemaCfd")
    @ResponseWrapper(localName = "SchemaCfdResponse", targetNamespace = "http://tempuri.org/", className = "org.tempuri.SchemaCfdResponse")
    public StructCfd schemaCfd(
        @WebParam(name = "base64Cfd", targetNamespace = "http://tempuri.org/")
        String base64Cfd);

    /**
     * Timbrado interno
     * 
     * @param claveWs
     * @param claveServicio
     * @param cadenaXml
     * @param rfcEmisor
     * @param usuarioWs
     * @param base64Cfd
     * @return
     *     returns org.tempuri.StructCfd
     */
    @WebMethod(operationName = "TimbrarCDClave", action = "http://tempuri.org/TimbrarCDClave")
    @WebResult(name = "TimbrarCDClaveResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "TimbrarCDClave", targetNamespace = "http://tempuri.org/", className = "org.tempuri.TimbrarCDClave")
    @ResponseWrapper(localName = "TimbrarCDClaveResponse", targetNamespace = "http://tempuri.org/", className = "org.tempuri.TimbrarCDClaveResponse")
    public StructCfd timbrarCDClave(
        @WebParam(name = "rfc_emisor", targetNamespace = "http://tempuri.org/")
        String rfcEmisor,
        @WebParam(name = "usuario_ws", targetNamespace = "http://tempuri.org/")
        String usuarioWs,
        @WebParam(name = "clave_ws", targetNamespace = "http://tempuri.org/")
        String claveWs,
        @WebParam(name = "base64Cfd", targetNamespace = "http://tempuri.org/")
        String base64Cfd,
        @WebParam(name = "cadena_xml", targetNamespace = "http://tempuri.org/")
        String cadenaXml,
        @WebParam(name = "ClaveServicio", targetNamespace = "http://tempuri.org/")
        String claveServicio);

    /**
     * Obtiene el timbre, regresa el timbre y el cfdi
     * 
     * @param strUserName
     * @param strPassword
     * @param base64Cfd
     * @return
     *     returns org.tempuri.StructCfd
     */
    @WebMethod(operationName = "TestCfd33SC", action = "http://tempuri.org/TestCfd33SC")
    @WebResult(name = "TestCfd33SCResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "TestCfd33SC", targetNamespace = "http://tempuri.org/", className = "org.tempuri.TestCfd33SC")
    @ResponseWrapper(localName = "TestCfd33SCResponse", targetNamespace = "http://tempuri.org/", className = "org.tempuri.TestCfd33SCResponse")
    public StructCfd testCfd33SC(
        @WebParam(name = "strUserName", targetNamespace = "http://tempuri.org/")
        String strUserName,
        @WebParam(name = "strPassword", targetNamespace = "http://tempuri.org/")
        String strPassword,
        @WebParam(name = "base64Cfd", targetNamespace = "http://tempuri.org/")
        String base64Cfd);

    /**
     * Obtiene el timbre, regresa el timbre y el cfdi
     * 
     * @param base64Cfd
     * @return
     *     returns org.tempuri.StructCfd
     */
    @WebMethod(operationName = "TestCfd33", action = "http://tempuri.org/TestCfd33")
    @WebResult(name = "TestCfd33Result", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "TestCfd33", targetNamespace = "http://tempuri.org/", className = "org.tempuri.TestCfd33")
    @ResponseWrapper(localName = "TestCfd33Response", targetNamespace = "http://tempuri.org/", className = "org.tempuri.TestCfd33Response")
    public StructCfd testCfd33(
        @WebParam(name = "base64Cfd", targetNamespace = "http://tempuri.org/")
        String base64Cfd);

    /**
     * Timbra un CFDI 3.3 con nuestro ambiente de pruebas principal
     * 
     * @param base64Cfd
     * @return
     *     returns org.tempuri.StructCfd
     */
    @WebMethod(operationName = "ProbarTimbradoCFDI33Principal", action = "http://tempuri.org/ProbarTimbradoCFDI33Principal")
    @WebResult(name = "ProbarTimbradoCFDI33PrincipalResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "ProbarTimbradoCFDI33Principal", targetNamespace = "http://tempuri.org/", className = "org.tempuri.ProbarTimbradoCFDI33Principal")
    @ResponseWrapper(localName = "ProbarTimbradoCFDI33PrincipalResponse", targetNamespace = "http://tempuri.org/", className = "org.tempuri.ProbarTimbradoCFDI33PrincipalResponse")
    public StructCfd probarTimbradoCFDI33Principal(
        @WebParam(name = "base64Cfd", targetNamespace = "http://tempuri.org/")
        String base64Cfd);

    /**
     * Obtiene el Estatus de un CFDI en el SAT
     * 
     * @param rfcReceptor
     * @param total
     * @param uuid
     * @param rfcEmisor
     * @return
     *     returns org.tempuri.StructCancel
     */
    @WebMethod(operationName = "EstatusCFDI", action = "http://tempuri.org/EstatusCFDI")
    @WebResult(name = "EstatusCFDIResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "EstatusCFDI", targetNamespace = "http://tempuri.org/", className = "org.tempuri.EstatusCFDI")
    @ResponseWrapper(localName = "EstatusCFDIResponse", targetNamespace = "http://tempuri.org/", className = "org.tempuri.EstatusCFDIResponse")
    public StructCancel estatusCFDI(
        @WebParam(name = "RfcEmisor", targetNamespace = "http://tempuri.org/")
        String rfcEmisor,
        @WebParam(name = "RfcReceptor", targetNamespace = "http://tempuri.org/")
        String rfcReceptor,
        @WebParam(name = "total", targetNamespace = "http://tempuri.org/")
        String total,
        @WebParam(name = "uuid", targetNamespace = "http://tempuri.org/")
        String uuid);

    /**
     * Consulta las solicitudes pendientes de cancelacion por aceptar o rechazar para un Receptor
     * 
     * @param rfcReceptor
     * @param produccion
     * @return
     *     returns org.tempuri.StructSolicitudesPendientes
     */
    @WebMethod(operationName = "ConsultarSolicitudesPendientesDeCancelacion", action = "http://tempuri.org/ConsultarSolicitudesPendientesDeCancelacion")
    @WebResult(name = "ConsultarSolicitudesPendientesDeCancelacionResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "ConsultarSolicitudesPendientesDeCancelacion", targetNamespace = "http://tempuri.org/", className = "org.tempuri.ConsultarSolicitudesPendientesDeCancelacion")
    @ResponseWrapper(localName = "ConsultarSolicitudesPendientesDeCancelacionResponse", targetNamespace = "http://tempuri.org/", className = "org.tempuri.ConsultarSolicitudesPendientesDeCancelacionResponse")
    public StructSolicitudesPendientes consultarSolicitudesPendientesDeCancelacion(
        @WebParam(name = "RfcReceptor", targetNamespace = "http://tempuri.org/")
        String rfcReceptor,
        @WebParam(name = "produccion", targetNamespace = "http://tempuri.org/")
        boolean produccion);

    /**
     * Permite a un Receptor aceptar o rechazar una solicitud de cancelacion
     * 
     * @param xml
     * @param aceptacion
     * @param produccion
     * @return
     *     returns org.tempuri.StructAceptarRechazar
     */
    @WebMethod(operationName = "AceptarRechazarSolicitudDeCancelacion", action = "http://tempuri.org/AceptarRechazarSolicitudDeCancelacion")
    @WebResult(name = "AceptarRechazarSolicitudDeCancelacionResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "AceptarRechazarSolicitudDeCancelacion", targetNamespace = "http://tempuri.org/", className = "org.tempuri.AceptarRechazarSolicitudDeCancelacion")
    @ResponseWrapper(localName = "AceptarRechazarSolicitudDeCancelacionResponse", targetNamespace = "http://tempuri.org/", className = "org.tempuri.AceptarRechazarSolicitudDeCancelacionResponse")
    public StructAceptarRechazar aceptarRechazarSolicitudDeCancelacion(
        @WebParam(name = "xml", targetNamespace = "http://tempuri.org/")
        String xml,
        @WebParam(name = "produccion", targetNamespace = "http://tempuri.org/")
        boolean produccion,
        @WebParam(name = "aceptacion", targetNamespace = "http://tempuri.org/")
        boolean aceptacion);

    /**
     * Timbra un CFDI 3.3 con nuestro ambiente de pruebas secundario
     * 
     * @param base64Cfd
     * @return
     *     returns org.tempuri.StructCfd
     */
    @WebMethod(operationName = "ProbarTimbradoCFDI33Secundario", action = "http://tempuri.org/ProbarTimbradoCFDI33Secundario")
    @WebResult(name = "ProbarTimbradoCFDI33SecundarioResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "ProbarTimbradoCFDI33Secundario", targetNamespace = "http://tempuri.org/", className = "org.tempuri.ProbarTimbradoCFDI33Secundario")
    @ResponseWrapper(localName = "ProbarTimbradoCFDI33SecundarioResponse", targetNamespace = "http://tempuri.org/", className = "org.tempuri.ProbarTimbradoCFDI33SecundarioResponse")
    public StructCfd probarTimbradoCFDI33Secundario(
        @WebParam(name = "base64Cfd", targetNamespace = "http://tempuri.org/")
        String base64Cfd);

}
